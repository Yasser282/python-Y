import numpy as np
from scipy.stats import ttest_1samp, pearsonr, linregress
import matplotlib.pyplot as plt

# Sample data for illustration
data1 = np.random.rand(100)
data2 = 2 * data1 + np.random.randn(100)

# Hypothesis Testing (t-test)
population_mean = 1.0
t_stat, p_value = ttest_1samp(data1, population_mean)

print(f"T-statistic: {t_stat}")
print(f"P-value: {p_value}")

# Correlation
correlation_coefficient, _ = pearsonr(data1, data2)
print(f"Correlation Coefficient: {correlation_coefficient}")

# Linear Regression
slope, intercept, r_value, p_value, std_err = linregress(data1, data2)

print(f"Slope: {slope}")
print(f"Intercept: {intercept}")
print(f"R-squared: {r_value**2}")

# Scatter Plot for Linear Regression
plt.scatter(data1, data2, label='Data')
plt.plot(data1, intercept + slope * data1, color='red', label='Linear Regression')
plt.title('Linear Regression')
plt.xlabel('X')
plt.ylabel('Y')
plt.legend()
plt.show()
